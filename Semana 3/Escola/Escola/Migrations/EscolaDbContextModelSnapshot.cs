// <auto-generated />
using System;
using Escola.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Escola.Migrations
{
    [DbContext(typeof(EscolaDbContext))]
    partial class EscolaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Escola.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("GENERO");

                    b.Property<int>("Idade")
                        .HasColumnType("INT")
                        .HasColumnName("IDADE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("SOBRENOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id")
                        .HasName("PK_ALUNO_ID");

                    b.ToTable("AlunoTB", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Boletim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("INT");

                    b.Property<int>("IdAluno")
                        .HasColumnType("INT")
                        .HasColumnName("FK_ALUNO_ID");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("ORDER_DATA");

                    b.Property<int?>("PK_ID")
                        .HasColumnType("INT");

                    b.HasKey("Id")
                        .HasName("PK_BOLETIM_ID");

                    b.HasIndex("AlunoId");

                    b.HasIndex("PK_ID");

                    b.ToTable("BoletimTB", null, t =>
                        {
                            t.Property("PK_ID")
                                .HasColumnName("PK_ID1");
                        });
                });

            modelBuilder.Entity("Escola.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.HasKey("Id")
                        .HasName("PK_MATERIA_ID");

                    b.ToTable("MateriaTB", (string)null);
                });

            modelBuilder.Entity("Escola.Models.NotasMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoletimId")
                        .HasColumnType("INT");

                    b.Property<int?>("FK_BOLETIM_ID")
                        .HasColumnType("INT");

                    b.Property<int?>("FK_MATERIA_ID")
                        .HasColumnType("INT");

                    b.Property<int>("IdBoletim")
                        .HasColumnType("INT")
                        .HasColumnName("FK_BOLETIM_ID");

                    b.Property<int>("IdMateria")
                        .HasColumnType("INT")
                        .HasColumnName("FK_MATERIA_ID");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INT");

                    b.Property<int>("Nota")
                        .HasColumnType("INT")
                        .HasColumnName("NOTA");

                    b.HasKey("Id")
                        .HasName("PK_NOTAS_MATERIA_ID");

                    b.HasIndex("BoletimId");

                    b.HasIndex("FK_BOLETIM_ID");

                    b.HasIndex("FK_MATERIA_ID");

                    b.HasIndex("MateriaId");

                    b.ToTable("NotasMateriaTB", null, t =>
                        {
                            t.Property("FK_BOLETIM_ID")
                                .HasColumnName("FK_BOLETIM_ID1");

                            t.Property("FK_MATERIA_ID")
                                .HasColumnName("FK_MATERIA_ID1");
                        });
                });

            modelBuilder.Entity("Escola.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CURSO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.HasKey("Id")
                        .HasName("PK_TURMA_ID");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("TurmaTB", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PK_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Interno")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("SENHA");

                    b.Property<string>("TipoAcesso")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TIPO_ACESSO");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("USUARIO");

                    b.HasKey("Id")
                        .HasName("PK_USUARIO_ID");

                    b.ToTable("UsuarioTB", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Boletim", b =>
                {
                    b.HasOne("Escola.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escola.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("PK_ID");

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Escola.Models.NotasMateria", b =>
                {
                    b.HasOne("Escola.Models.Boletim", "Boletim")
                        .WithMany("NotasMateria")
                        .HasForeignKey("BoletimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escola.Models.Boletim", null)
                        .WithMany()
                        .HasForeignKey("FK_BOLETIM_ID");

                    b.HasOne("Escola.Models.Materia", null)
                        .WithMany()
                        .HasForeignKey("FK_MATERIA_ID");

                    b.HasOne("Escola.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boletim");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Escola.Models.Boletim", b =>
                {
                    b.Navigation("NotasMateria");
                });
#pragma warning restore 612, 618
        }
    }
}
